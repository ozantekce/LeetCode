package Maximum_Number_of_Consecutive_Values_You_Can_Make_1798;

import java.util.*;

public class Solution {


    public static void main(String[] args) {

        long st = System.currentTimeMillis();


        System.out.println(getMaximumConsecutive(new int[]{
                762,1,1,1,1506,1,1918,5932,1,1,4930,7686,1,1,8301,1,1,1,7508,1,7622,1264,1,8210,1,1,6862,1552,1,1,879,2493,1,8351,1,787,1,7007,8030,1,1,1,1,61,7934,1,3,1,6203,7398,4619,7824,1167,1,5408,1,6542,1,5743,5919,1,2772,1,1,2465,1,2293,1,858,1,9028,8355,9032,2652,3161,1646,1634,1243,1,5347,1000,1,1,7342,1,1100,5392,6943,2977,9837,1499,1,8473,8502,5035,499,1,1,1,6438,5901,1,1,1,5139,1,1,1,7221,1,6350,1,4336,5799,1,1,8159,5324,7036,1,2924,4357,5468,3549,1,1,1,1,8311,1,2472,1,1,5125,7497,1,1221,1,1,1,1,4727,1,4891,9431,1,9956,1,8784,1,6253,4649,1,1,1,637,789,1,1,5493,9828,1095,1,2568,1,5645,8301,2282,831,6667,4751,9127,7734,1,1,1,3573,1,7223,6679,1,8804,1,3257,4176,1,2257,4387,1,5016,1,1,5169,1,1,4084,1,864,55,1,1,1,1,7982,1,7848,1,1,1,6275,5368,1,1,1,5554,1,3952,1,5983,1,1,8899,2140,5990,1,1,1,1,1170,482,1,1,1,1,4888,1,1,133,7425,2760,1,320,1,1,1,1,1,1,5593,1,1116,1753,2656,1,401,7048,1,1,1,2769,7765,1,1,728,1,5649,1,9204,1,1,2225,1,9614,1,5999,4705,1,1,1,1,1637,1,7205,7153,3571,1,1,7858,4408,1,1,9412,555,5136,1,1,1,1,1,5708,1,7214,1,2675,9923,1,6521,8697,4294,783,4725,1,1946,6766,4118,1,2314,1,1,1,1,1,1,1,1,8330,8711,1,1016,1,290,4645,3466,1,1,959,4965,1,1,1,4029,1,1,2722,9309,4344,3356,1,4057,7379,1,1,1,3695,1,4856,1,1,1,6552,2069,1,1,1637,1,1,1,1,1,1,1,1,1,1,1,1,1,1,6894,4044,7882,4760,1,1,1,1,1269,4838,6039,4794,2323,1,1119,1,9178,1,9432,6471,8920,1,6668,4437,1,1,8423,1,3224,6653,1,1386,1,9318,7557,8304,1,1,1,1,1,1,1,9061,9063,458,1,1,1,1,1,1,1,5371,1,1,1,1,1,459,1,6851,3029,1,2933,1,9456,1,1,3543,1,1,6653,1,5796,1,4396,7819,1116,1,1,1,2570,1,1,1,7793,3246,1,1,5978,1,1,1,6403,2340,4550,1,1,1,6822,1,9848,1237,748,1,7432,430,1,1,1,258,1,4958,283,2597,1,1,6468,1,4940,5121,1,9190,8468,1,503,4741,5552,4248,1,1,7648,1,1,3173,808,3373,1406,1284,952,1371,8368,1,1023,1,9276,5515,1,8116,1,1,5115,4584,5689,3861,894,2054,6640,1,1,2894,53,1,1069,1,1,1,1,1,7882,7958,1,4534,8371,1,496,1,1,1,1,1,1,1337,1,8612,1,1,6569,4070,1,8678,1,668,1,7523,1,1,1,1,1,1,1,1,6923,3214,3677,5083,1,4419,1,1,1,1,5570,1,1,64,8149,9782,3784,2470,9090,1348,7016,3431,7316,9672,1,9218,8469,1,4235,2804,857,8486,930,1,2422,1,3908,1,1,7946,1,813,8021,9042,1,7305,1,9082,1,1,1,8926,2821,151,7552,1,1,5066,1,8473,1989,6369,3551,1153,4210,3282,1,7098,1,1,1,1446,1,1,7850,1,1,1,5240,1,3059,304,1,2192,1,1,519,4183,1,1,1,5235,7199,1,1,1,1,4025,1,1905,1,1,939,1,1,1,1,5926,2256,1989,2895,1,2922,3672,8264,1,1,1,1,6009,1,1902,1,4456,1,1,1,8010,9954,1,1,7054,1,1,1199,8895,1370,1,4737,1,1,6923,1,1,1,1,4608,831,1,1,1,5361,1,3151,4172,1,1,4362,4631,9970,3422,1,9031,1,1168,1,1,1,4514,5301,1,1,8381,4547,1,1,287,1,1,1,6545,3438,1,1,1,4912,3752,6858,1,1590,8121,9243,485,1,8519,1393,5253,1,188,119,1,243,465,1,1,1,1,8674,1,1,1,4341,1,1,9593,6499,9518,2486,1,9136,1,5072,1,7489,1,2483,1,1,4329,1,9800,1,1,1718,1,1,2024,686,9327,5390,2959,1,1,1,1,6852,1,1,7190,645,5257,9864,9846,1,1,1,1,9417,1,3804,6734,6948,6997,1,1303,1,1,7348,9350,6808,1,1,1,1,1997,5846,5278,5088,1,1,9157,1,9780,1,1,4198,229,1790,1,6262,1,8235,2674,4197,7381,8475,1,1,1,1,1169,2609,1700,7521,1,1,8595,4467,1,8762,1,762,7466,1,9445,1,4227,1,1,1,1,1,1,1,1,1,1,5518,1,1496,8414,1,1,1,1,4079,1617,3309,1,3494,1,7246,1,1,2178,5552,1,1,3330,5334,1,8126,6047,1,1,1,1,177,9744,1,1,9214,342,2731,4617,1,2350,1,8508,8213,1,1,7306,4842,1,1,447,8413,1,1,1,1,7967,1,1,1,1,1,3856,1,8350,1,3102,4165,1,1,6585,5153,8758,4638,1,8185,3634,1,1,7657,1,2480,1,1401,2400,1,1,1,3799,324,114,1,1,1,3298,1,1,3711,1,1,1,1,1,6752,1,1,1,1,5596,1,8212,4558,9641,1,1,1288,2222,1,8402,2921,1,6574,1,1,6287,6259,6737,1,4718,1,1,3972,1,5614,122,7148,1,1,7054,1,2818,1,1,5888,2555,1,2678,3584,8954,9816,1712,1997,1,1,4864,1275,1,1,9577,4489,1,1618,1,1,1164,6245,1,3145,1,5074,7419,7804,1281,1,1,9095,1,134,1,1,1,1,1382,7945,3372,9957,4487,1,1,7225,5258,5130,1,4622,4414,1,1,348,9917,1,1,1,1,1,6940,1,6680,7316,7492,7144,4574,9623,1,1,522,774,1,89,2062,1,1,1,3445,9710,8894,2547,4829,6311,718,1,1,1,1,9623,8127,1,1301,1,6970,513,1,4905,6916,1,1,3925,9801,1,1,1,1,1,5502,7376,1,1,1,1,592,1,3419,8424,1,1987,1,2090,2653,1,1,509,9575,8457,1,1,1,5852,1,1,1097,1,1,6546,982,6835,1,9636,1,261,1116,1,1,1,1,1206,1,1,4900,1,1,8021,5941,1,7970,1,1,1,7669,1,1,5123,426,9623,1,3447,1,3172,1,1,1,7367,1,1,1,1,7940,1,1,1,3894,1,1,1,1,7406,1,1587,1,2218,5529,6545,4355,8294,1,9383,1,5358,1,1,2449,4477,1,4931,1,6195,1,1,1867,1,1,1,1,8226,1,4480,1,9767,2694,1,1,8153,1,1159,1,1,1,1,1,6571,1318,7953,1,9680,1,1,1,1,7791,8500,1,4204,1670,6043,1,1,1,8892,1,1,1,4137,1,1,1567,1,4891,1,6581,6367,484,7715,4767,855,6743,1,9298,1,4750,7195,1,1,1,9489,937,1,8836,8703,4611,1,1,1,9726,7330,650,1800,4295,5039,7245,5978,1,8469,1,2043,3880,2661,2136,9366,3341,1,1,1,3331,1186,1,1,9981,1,1,1,1,1,8494,9629,1,1,1,1,8659,686,1,6854,8282,1,7378,1,1483,2465,1,7480,1,1,6361,1,1,1,1,8851,8053,1,1,1,9799,1,4934,1,4160,2700,2981,9245,1060,6723,1,1,1,1,1,1,1,1,1,1,5956,4636,1,1,1,6296,1,2550,1,141,3801,6840,4518,9864,1,6022,6681,1,1,1,1,1,9591,1,309,830,2446,7585,5679,458,8813,1,1,3853,6642,1,2891,2966,1,9326,7131,310,1,4891,1,1,9771,6604,1,6992,4297,2218,1,1,2266,1,1,948,1,1,1,6262,1,1,1,1,6649,2282,1,1,9408,8350,7648,1,1,1,1,7750,8062,4372,4633,2450,8580,1,1,3976,3474,8573,1894,4528,1,2692,1,3419,694,8398,5694,1,408,1,7148,5688,1,1,1,1,1,5955,3694,9994,1,200,1,1,1,1,2428,5963,1,7483,1,7184,1,1,305,3675,7510,6401,5467,30,1,6668,3032,8362,1043,1,1,7466,1,3016,1,834,1,1,1,989,2337,7681,1,5161,1,1236,1,1,1,8522,2966,5106,1,9542,7867,1,1021,1,1,1,5371,1492,8624,1,3505,1,1,9857,1089,1,2671,1,3095,1,9124,8769,1,8080,1,1,1,1,4011,8775,1,1,8226,1,2610,1,1,5557,1,1052,65,1,1,1,1,7513,1,4143,1,1,5652,4803,1,1723,1,1,2722,5407,9293,1,1,617,5543,3925,1,1,1821,1848,1,1,1,1,2670,3386,1,1,1,1,1,4039,1,1,1,2357,1,1,1,8010,1,1,439,8267,7761,5430,6305,4689,3456,1,1,1,1,1,1,579,5100,1,1,6168,7304,1,1,9803,1,1,2343,8425,3177,142,1,1,709,150,1,1,1,1,9441,1,7012,1,1,2321,6413,3756,6908,1392,1,1,3853,1,2017,1,5561,8921,7162,101,6714,1,1,9167,8168,1,6892,9568,8714,1,2194,9822,4771,1,1,9587,1591,1,4585,1,1,8068,1,6549,2185,623,1,4940,9611,2698,1,5745,3445,1155,1,1,2715,1,1,1490,3582,8355,1,1,6587,1,1,1,9939,1,1,2989,58,1,8682,3659,1,1,2483,1,1795,1,2066,9439,1,1,1,421,1,1,8665,1661,9616,1,1,1,5243,941,8055,5849,2181,940,4256,1,2159,1,3384,1,2705,1,9155,1,1,2288,995,9839,8714,9391,1,1,1,9912,8333,1783,1,8552,4282,1,6753,2017,1713,5308,1,1,5343,630,1,1,1,479,1,1,1,9759,3188,7659,2406,5930,1,105,1,1,1,2371,7730,1,3640,9042,1,1,1,1,1667,1,8227,1,1,1,1,1,3692,1,2689,1085,1,7080,1,1,6437,1,8018,1,1,7438,1160,8403,5663,1,1,1,1,1,1,3488,5701,2912,1796,1377,5809,1,1,3069,1,1,1,5686,1,485,5706,1,1,1,1,1,4068,1,1,1,2643,7521,9623,5569,9946,1,4386,1154,4491,3693,6032,1,9964,1,3598,1604,1,1,1,1827,1774,5498,1,1,1,1,1,1,1,1,7643,7483,3597,1,1,8485,3739,1,1,4312,3420,1770,4266,2169,4178,7374,1,1,1,1,1,4737,2608,8421,1,1,9293,5844,5373,1,3059,8205,9103,1,1,2347,1816,4008,1,1,1,4746,6148,805,3789,1,1,9525,1,1

        }));

        System.out.println(getMaximumConsecutive(new int[]{1,3}));
        System.out.println(getMaximumConsecutive(new int[]{1,1,1,4}));
        System.out.println(getMaximumConsecutive(new int[]{1,4,10,3,1}));


        long et = System.currentTimeMillis()-st;
        System.out.println(et);

    }

    public static int getMaximumConsecutive(int[] coins) {

        Arrays.sort(coins);
        if(coins[0]!=1){
            return 1;
        }

        int x = 1;
        for (int i = 0; i < coins.length; i++) {
            if(coins[i]>x){
                break;
            }
            x = x+ coins[i];
        }

        return x;
    }


}
